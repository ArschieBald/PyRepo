# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?

def Div(x):  # Kaç tane pozitif tam sayı böleni olduğunu bulan fonksiyon.
    div_counter = 0
    for i in range(1, x + 1):
        if (x % i) == 0:
            if i == (x / i):  # Bölen ile bölümün eşit olduğu durumlarda ikisi de aynı sayı olduğundan sayacı bir kere artırdım.
                div_counter += 1
            if i < (x / i):  # Bölen bölümden küçük olduğunda sayacı artıracak.
                div_counter += 2  # Hem bölen hem de bölüm için sayacı 2 kere artırdım.
            else:  # Bölen bölümden büyük durumda ise else koşuluna girip sonucu verecek.
                # Çünkü bölenin bölümden büyük olduğu durumlarda aslında daha önceki bölme işlemlerinin aynısını
                # yapmış oluyor.Örneğin: Bölünen:10, Bölen:2, Bölüm:5---Daha sonra bölenin 5 olduğu duruma geldiğinde yapmasına gerek
                # kalmayacak ve işlem kalabalığından kurtulmuş olacağız.
                return div_counter


n = 0
divisors = 0
i = 1
while divisors <= 500:
    n += i
    i += 1
    divisors = Div(n)
print(n)
